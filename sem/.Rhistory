v1 <- c(1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,4,5,6)
v2 <- c(1,2,1,1,1,1,2,1,2,1,3,4,3,3,3,4,6,5)
v3 <- c(3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,5,4,6)
v4 <- c(3,3,4,3,3,1,1,2,1,1,1,1,2,1,1,5,6,4)
v5 <- c(1,1,1,1,1,3,3,3,3,3,1,1,1,1,1,6,4,5)
v6 <- c(1,1,1,2,1,3,3,3,4,3,1,1,1,2,1,6,5,4)
m1 <- cbind(v1,v2,v3,v4,v5,v6)
cor(m1)
factanal(m1, factors = 3) # varimax is the default
factanal(m1, factors = 1) # varimax is the default
v1 <- c(1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,4,5,6)
v2 <- c(1,2,1,1,1,1,2,1,2,1,3,4,3,3,3,4,6,5)
v3 <- c(3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,5,4,6)
v4 <- c(3,3,4,3,3,1,1,2,1,1,1,1,2,1,1,5,6,4)
v5 <- c(1,1,1,1,1,3,3,3,3,3,1,1,1,1,1,6,4,5)
v6 <- c(1,1,1,2,1,3,3,3,4,3,1,1,1,2,1,6,5,4)
m1 <- cbind(v1,v2)
cor(m1)
factanal(m1, factors = 1) # varimax is the default
m1 <- cbind(v1,v2)
v1 <- c(1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,4,5,6)
v2 <- c(1,2,1,1,1,1,2,1,2,1,3,4,3,3,3,4,6,5)
v3 <- c(3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,5,4,6)
m1 <- cbind(v1,v2)
cor(m1)
factanal(m1, factors = 1) # varimax is the default
v1 <- c(1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,4,5,6)
v2 <- c(1,2,1,1,1,1,2,1,2,1,3,4,3,3,3,4,6,5)
v3 <- c(3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,5,4,6)
m1 <- cbind(v1,v2,v3)
cor(m1)
factanal(m1, factors = 1) # varimax is the default
library(lavaan)
setwd("/Users/junseoklee/Documents/Research/PhD-Year 1/Projects/RLINF/Repository/sem/")
threshold = 0.05 # p-value threshold for null model exclusion (valid are: 'none', 0.05, 0.01, 0.001)
if(threshold == 'none'){
pstr = 'pnon'
}
if(is.numeric(threshold)){
pstr = sprintf('p%03d',threshold*1000)
}
icar <- read.csv(sprintf('dat/icar_sem_test_%s.csv',pstr), header=FALSE)
pars <- read.csv(sprintf('dat/pars_sem_test_%s.csv',pstr), header=FALSE) # 1-6 is bandit, 7-12 fairy
icar_rt <- read.csv(sprintf('dat/icar_sem_retest_%s.csv',pstr), header=FALSE)
pars_rt <- read.csv(sprintf('dat/pars_sem_retest_%s.csv',pstr), header=FALSE) # 1-6 is bandit, 7-12 fairy
# define variables with proper variable naming
ipar <- 5
Data <- data.frame(
sigma_B    = scale(log(pars[,c(ipar)])),
sigma_B_rt = scale(log(pars_rt[,c(ipar)])),
sigma_F    = scale(log(pars[,c(ipar+6)])),
sigma_F_rt = scale(log(pars_rt[,c(ipar+6)])),
icar       = scale(icar[,1]),
icar_rt    = scale(icar_rt[,1])
)
# model with single latent sigma structure
model_reduced<-"
! regressions
intell=~ititt*icar
intell=~itirt*icar_rt
sig=~ssBtt*sigma_B
sig=~ssBrt*sigma_B_rt
sig=~ssFtt*sigma_F
sig=~ssFrt*sigma_F_rt
intell=~intell__sig*sig
! residuals, variances and covariances
icar ~~ VAR_icar*icar
sigma_B ~~ VAR_sigma_B*sigma_B
sigma_F ~~ VAR_sigma_F*sigma_F
icar_rt ~~ VAR_icar_rt*icar_rt
sigma_B_rt ~~ VAR_sigma_B_rt*sigma_B_rt
sigma_F_rt ~~ VAR_sigma_F_rt*sigma_F_rt
intell ~~ 1.0*intell
sig ~~ 1.0*sig
";
fit_reduced<-lavaan(model_reduced,
data=Data,
fixed.x=FALSE,
missing="FIML",
std.lv = TRUE,
likelihood = "wishart",
se="bootstrap", bootstrap=1000
);
summary(fit_reduced, fit.measures=TRUE, standardized = TRUE);
# model with dual latent sigma structure
model_dual<-"
! regressions
intell=~ititt*icar
intell=~itirt*icar_rt
sig_B=~sBsBt*sigma_B
sig_B=~sBsBr*sigma_B_rt
sig_F=~sFsFt*sigma_F
sig_F=~sFsFr*sigma_F_rt
intell=~itsigB*sig_B
intell=~itsigF*sig_F
! residuals, variances and covariances
icar ~~ VAR_icar*icar
sigma_B ~~ VAR_sigma_B*sigma_B
sigma_F ~~ VAR_sigma_F*sigma_F
icar_rt ~~ VAR_icar_rt*icar_rt
sigma_B_rt ~~ VAR_sigma_B_rt*sigma_B_rt
sigma_F_rt ~~ VAR_sigma_F_rt*sigma_F_rt
intell ~~ VAR_intell*intell
sig_B ~~ VAR_sig_B*sig_B
sig_F ~~ VAR_sig_F*sig_F
";
fit_dual<-lavaan(model_dual,
data=Data,
fixed.x=FALSE,
missing="FIML",
std.lv = TRUE,
likelihood = "wishart",
se="bootstrap", bootstrap=1000
);
